name: 'production-centralus-apply'
on:
  push:
    branches:
      - master
    paths:
      - 'production/centralus/**'
  pull_request:
    paths:
      - 'production/centralus/**'
jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      TF_VAR_active_directory_client_app_id     : ${{ secrets.TF_VAR_active_directory_client_app_id      }}
      TF_VAR_active_directory_server_app_id     : ${{ secrets.TF_VAR_active_directory_server_app_id      }}
    steps:
      - name: 'Checkout'
        uses: actions/checkout@master
      - name: 'Terraform Format'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.20
          tf_actions_subcommand: 'fmt'
          tf_actions_working_dir: './production/centralus'
      - name: 'Terraform Init'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.20
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: './production/centralus'
          tf_actions_comment: true
          args: '-backend-config="./backend.tfvars"'
        env:
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}
      - name: 'Terraform Validate'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.20
          tf_actions_subcommand: 'validate'
      - name: 'Terraform Plan'
        uses: hashicorp/terraform-github-actions@master
        if: github.ref != 'master'
        with:
          tf_actions_version: 0.12.20
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: './production/centralus'
          tf_actions_comment: true
          args: '-var-file="./terraform.tfvars"'
        env:
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          TF_VAR_active_directory_server_app_secret : ${{ secrets.TF_VAR_active_directory_server_app_secret  }}
          ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}
      - name: 'Terraform Apply'
        uses: hashicorp/terraform-github-actions@master
        if: github.ref == 'master'
        with:
          tf_actions_version: 0.12.20
          tf_actions_subcommand: 'apply'
          tf_actions_working_dir: './production/centralus'
          tf_actions_comment: true
          args: '-var-file="./terraform.tfvars"'
        env:
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          TF_VAR_active_directory_server_app_secret : ${{ secrets.TF_VAR_active_directory_server_app_secret  }}
          ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}

      #### Once cluster is up and running, we want to create kubernetes resources in following

      - name: 'Terraform Format - kubernetes'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.20
          tf_actions_subcommand: 'fmt'
      - name: 'Terraform Init - kubernetes'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.20
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: './production/centralus/kubernetes'
          tf_actions_comment: true
          args: '-backend-config="./backend.tfvars"'
        env:
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}
      - name: 'Terraform Validate - kubernetes'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.20
          tf_actions_subcommand: 'validate'
          tf_actions_comment: true
          tf_actions_working_dir: '.'
      - name: 'Terraform Apply - kubernetes'
        uses: hashicorp/terraform-github-actions@master
        with:
          if: github.ref == 'master'
          tf_actions_version: 0.12.20
          tf_actions_subcommand: 'apply'
          tf_actions_comment: true
          tf_actions_working_dir: './production/centralus/kubernetes'
          args: '-var-file="./terraform.tfvars"'
        env:
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          TF_VAR_active_directory_server_app_secret : ${{ secrets.TF_VAR_active_directory_server_app_secret  }}
          ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}